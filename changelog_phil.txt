20121212
========

- Found various gaps in platform support for Win64. Closed.
- Still fighting p0013....
 - Very odd. The arrays seem to be intact and valid. There's something odd going on in the look-up. A multiple selection, even with a gap between, always returns sequential numbers (1 2) rather than (3 5). Puzzling. Values coming into the parse function are correct.
- Replaced hard-coded platform IDs with official variable names.
- Deuce reported that the compiled version doesn't have the start-up issues of the uncompiled version (p0014), on both Windows and Mac. Odd. (NT : known issue with images loading into uncompiled LScripts - nothing to do except compile the script)

20121211b
=========

- Considering bumping host version requirement to allow hacky saving to be removed, for simplicity.
- Flagged HackyUpdates with FIXME and ensured it activates on Mac64 for review. Might not be needed any more.
- Need to resolve p0013 and then attack the pending items list before new work undertaken.

20121211
========

- Adjusted o_itemslb_event to work with the new array configurations.
- Adjusting o_parseListItems to work with the new filtered ID list. Also adjusted input variable name (changed passItemsString to overrideItemsString).
- Highlighting code now appears to be working! It needed a pair of req_update calls. Added comments to code.
 - Lurking bug p0013 : if you select the second light of two, the first is highlighted. Gah.
- Next step is o_AddAll re-implementation.
- Moved override item filtering code into o_Filter(overrides_list) for generic use.
- Removing comment markers from code disabled during UI dissection. Should resolve some lingering repaint issues. May need to add o_displayNamesFiltered clearance to some functions in the UDF file.

20121210
========

Continuing work, now to handle the overrides list assignment and retrival stuff. Check the override operation observations section below for how this worked in the original code. This should help to understand this change.

- Bug fix to correctly populate items list - silly bug due to indexed arrays in LScript starting from 1.
- Removed various info() calls.
- Removed obsolete code.
- Implemented o_displayIDs to build an override-item-list-aligned ID array.
	- Filter this into o_displayIDsFiltered in the same way that we handle o_displayGenus, o_displayNames.

20121207
========

Work continues on the UI systems :

- Migrated requpdate() calls to req_update().
- Various fixes and implementation tweaks to filter override items. Some remaining bugs to be ironed out.
- Disabling direct calls to set the override item list to nil or set_o_items. The associated array ought to deal with this.
- More code clean-up to simplify overrides list handling in case of multi-selection, etc.

20121206
========

Brace yourself. Here's the big set of UI changes related to filtering the override items listbox based on selected override type, and to making the code less aggravating to read. Many thanks to both Lernie and Matt for their help in showing me where I was going wrong in the original attempt to implement the listbox filtering based on a selection elsewhere in the UI. I wasn't far off, but overlooked the multi-selection aware nature of the listboxes and a couple of other issues.

- Changed the obscure c3 listbox references to 'gad_SceneItems_forPasses_Listview'
- Changed the obscure c3_5 listbox references to 'gad_SceneItems_forOverrides_Listview'
- Changed all other obscure UI references to explicit labels; more readable/understandable than 'c0_5'
- Removing lots of tempNumber usage that confuses intent of code.
- Added debug state button to UI. Intent is to enable developer to block rendering and to have scene files open for inspection during development of new support in PP. Only shown in dev mode.
 - Render functions now respect this setting.
 - Setting retained across sessions. Default is off.
- Switched dev and debug handling to integers to make handling easier. 0 is off, 1 is on.
- Split Passes and Overrides UDFs out of main file to two separate ones.
- Reworked the override item list generation code - much simpler.
- Fixed bug p0012 - hadn't yet hooked up the override lists in the reprocess UI code.
- Initial migration of override items listbox code to new filtered list. This will be bringing breakage aplenty.... There's some additional subtlety in tracking selected items, it seems.
- Scene Master special item gets an internal genus type of 0 to filter against the type6 override.

20121204
========

- Moved button functions out of Interface code file into UDF file. Makes more sense.

20121203
========

- Added info() calls to try and understand why genus checks are failing, allowing incompatible types to be assigned to overrides.
 - Found that code only uses genus to know how to reference the itemname in terms of an agent. There is no check for compatibility with the selected override.
- Rewrote interface code to check override type and genus, rejecting incompatible assignment attempts.
 - Works just fine.
 > Fix to be rolled into other functions in the system. FIXME added to o_addAll - this will need to be re-worked in the same kind of way.
- AddSel button tries to add selected Layout item, not the elements in the righthand listbox. Documented, but odd, possibly not expected, behaviour that caused p0010. Opened p0011 for more explicit tracking of issue and whether this needs to be re-worked.
- Added platform '11' corresponding to Mac64 platform to various platform checks in the code.
- Added dev flag in the render code to block rendering and instead permit inspection of the generated scene file and batch file combination.
- Re-jigged some changes related to override item assignment filtering, to make them more understandable.
- Minor typo fixes.

20121201
========

- Unpicked work related to false start to address issue p0009. Better fix needed.
- Added platform ID of 11 to correspond to Mac64.
- Listbox selections are misbehavingâ€¦ p0010

20121130
========

- Fixed obscure startup bug p0003 in the code.
- Running QA tests on pass generation and functionality from yesterdays sweeping changes....
 - Bug p0004 fixed in argument order for new SceneGen code. Now works properly.
 - Bug p0005 fixed : had overlooked a legacy path construction chunk of code that missed a getsep() call originally and hadn't been migrated to the new generic construction func.
 - LWO saver code was broken in original script (p0006). Moved to the generatePath function. Potential for simplification exploited as well - duplicate code in save path eliminated with a single instance. Saver construct was also easily matched to generic form in function.
 - Validating object property overrides : visible to camera; visible to rays
 - Validated surface override
 - Validated alternative object override
 - Validated light exclusion override
 - Validating master scene override :
  - Bug p0007 identified - master scene override will fail if anything other than the (Scene Master) is added :
	- Initial fix is to empty the assignmentArray for this override - it should be nil to avoid issues. Had to also add some safety checks for nil for size(assignmentArray) later in code due to this.
- Bug p0008 identified and preliminary triage added - if the overrideType is (nil), size() will choke badly in the 'failsafe' conditional in sceneGen. Trying to avoid this and more cleanly handle the situation.
- Bug p0009 related to the above - it seems to be possible to add elements to overrides that are incompatible with that override (e.g. surfacing overrides to lights)
 - Fix will be to screen right hand column contents to avoid listing incompatible types for overrides. UDF code needs serious work to address this (also for add all, etc. buttons).

- 30 KB less code right now compared to original source.

20121129
========

- Trying to re-enable disabled lens flare and volumetric properties support for lights. Untested.
- Major optimisation of the SceneGen code :
	- Started by splitting code and looking for differences between frame and sequence mode. Based on differences, added a 'mode' switch ("frame" or "seq"). This then drives the output string formatting and naming. This allowed the majority of the simplification.
	- Added a new internal function called generatePath that takes inputs common to all of the SaverPath generation steps. This reduces duplication in the save code to function calls with similar parameters. The save function utilises mode to determine how to construct the final path.
	- Reduced code by 20 KB. Redundant saverPath code will be removed once experimental changes for generic path construction have been validated.
- Pushing UI layout variables into new passEditor_UIglobals.ls file, to be able to easily share layout settings between edit and create override dialogs, for example. All dialogs migrated and tested. Moved 7 KB of variable definitions out of the Interface_Subfuncs file. Some code increase due to the revised dialog in the editing section, but at least it is all now consistent. Will consider a further optimisation in a future revision.
- Minor coding style fixes (bug p0002).

20121128
========

- Removed unused build variable. Switched version to a date build (experimental)
- Added a dev toggle switch to handle @insert switching for source vs compiled.
- Adjusting about screen to remove registration readout and to add LW version and platform information.
- Removed dongle check code that was obsolete.
- Removed Mac CFM code chunk - CFM was never supported, based on the code comments.
- Optimised the @insert statements to make the code more readable and maintainable.
- Discovered that @insert doesn't work with icon resources - you have to include them in the main script.
- Moved variables out of code into a separate file to reduce clutter and needless duplication.
- Removed dead code that was disabled by previous contributors for better alternatives.
- Fixed indenting in original code.
- Moved UDF code to a dedicated file.
- Worked around About box corruption (bug p0001) by disabling drawline calls in the req_redraw function. Added an explicit line drawing call in the about box function instead.


+++++++++++++++
+ In Progress +
+++++++++++++++

p0013 @ high prio
HackyUpdates review
HackySaving deprecation
Block operation on CFM LW.
o_AddAll


********
* Bugs *
********

p0001 : About screen corruption (Fixed)
p0002 : Coding style issues (Review ongoing, largely fixed)
p0003 : Start-up bug. (Fixed)
p0004 : SceneGen routine blows up. (Fixed)
p0005 : path incorrect. (Fixed)
p0006 : LWO saver blowing up. (Fixed)
p0007 : Master scene override failure if anything other than, or in addition to, (Scene Master) is assigned to it. (Fixed, better fix needed - see p0009)
p0008 : Failsafe code for overrideType needs to be made more robust. (Fixed)
p0009 : Possible to add (Scene Master) item to overrides that are not related. Need to engineer a fix (skip first item in list, or create a genus for this item). (In progress with 20121206; nominally working in 20121211, but some final tweaks are needed.)
p0010 : listbox selections are misfiring. (notabug? related to p0011 - user expectation was different to UI functionality)
p0011 : AddSel seems to replace existing assignments of overrides, rather than adding to the existing selection. Odd and probably the cause for report p0010. (deferred)
p0012 : Rebuilding lists causes script to explode. (Fixed)
p0013 : Selecting second item in list causes highlight to be drawn (on repaint) for 1st item. (20121211 - new)
p0014 : Uncompiled version crashes out on Mac and fails to start-up roughly 70% of the time on WinXP. (closed, LScript bug)
p0015 : Overrides with assigned items don't get bullet point until the lists are updated, or some major redraw occurs (also in original code)

:::::::::::::::::::
: Issues to check :
:::::::::::::::::::

- migrate override properties for each supported type into an array, and make the handling code aware of the array. Easier to extend with new features. Probably also need to make the UI code similarly flexible over time.
- all features post-9.3.1 need to be reviewed and checked against the scene file.
	- Scene Master override is the primary issue now.
	- requires *heavy* research into the SceneGen code....
	- radiosity example :
	    new interface elements to allow access to the new features, probably revamping the scene master override type. Or maybe creating a new override type and method of assigning.
		parse support for finding where in the scene the new radiosity information is stored. in other words, what's before it, and what's after it in the scene file?
		parse support for writing that information, from the override properties, into the render scene. you'll have to set up and obey all the if/then switches of testing if the override is assigned, then testing if the information is already in the scene file, then if all the conditions are right, plugging in the override radiosity into the render scene instead of the live scene radiosity settings.


-------------
- Reference -
-------------

A. settingsarray
----------------

This tracks what is to be done. The 'type' of entity in the array is defined arbitrarily as :

	case 1: "   (.srf file)"
	case 2: "   (object properties)"
	case 3: "   (.mot file)"
	case 4: "   (.lwo file)"
	case 5: "   (light properties)"
	case 6: "   (scene properties)"
	case 7: "   (light exclusion)"

B. How were override items handled originally?
----------------------------------------------

In the original code, prior to the filtered item list for overrides, the code worked in the manner described below :

1) o_itemslb_event:

	In items listbox, in an override is selected :
		- the selected items are added to the passOverrideItems array for the current pass and selected override.
		- o_items is the index of each selected item in the listbox. This is a fixed list and item 1 is always the (Scene Master) entity.
		- All other items are tracked by their display ID, so the index in o_items has to be decremented by 1 (due to the Scene Master) to correctly locate the displayID associated with the selected item.
		
2) o_parseListItems:

	This returns an index in the listbox for each assigned item in the selected override.
	This is done by using the stored displayID in part 1 to return an index.
	For the 2nd and 3rd items selected, the returned index would be '2 3'
	
3) overrideslb_event:

	This uses o_parseListItems to retrieve the indices of the selected items from the array.
	
