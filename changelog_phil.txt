20130107
========

- Misc bug fixes.
- tempDirectory now a global since it's used so much.
- Light override was partially busted.
 - Reworked to reliably change/handle lens flare and volumetric properties.

20130106
========

- Updated graphics to match 'Renewed' differentiation.
- Removed 'Affect OpenGL' light override setting - it has no bearing on the render.
- Implemented FiberFX pass generation and overrides in Scene Master.
 - Added safety check in scene generation code to query whether we're altering version 3 data.
 - Changes are very specific in nature due to the unfortunately generic parameter names being used in this plugin's data.
- Reworked scene generation code due to inconsistent GI parameter presence in LWS files. Extended the preparation code to review whether certain inconsistent settings are present. If they aren't, we insert them into the scene file in the correct location with the corresponding value to avoid changing behaviour. We then set the value accordingly later in the generation code.

20130104
========

- Found the render code wouldn't work at frame 0. The system would think it saved frame 1, but actually frame 0 should have been saved.
 - Implemented int() cast to force the frame to the integer value returned by the system.
- Fixed some odd scene generation bug, but not exactly sure how. Oh well.

20130103
========

- Moved generateSurfaceObjects() to the sceneGen file from the interface_subfuncs file.
- p0017: On Win32, was able to get correct line in error message for 'surface override' bug p0017. Seems that line 1744 in the sceneGen generatePath code reports an invalid value of pass :
 	genPath = genPath + outputStr + "_" + fileOutputPrefix + "_" + userOutputString + "_" + passNames[pass] + baseName;
 - Also triggered when .lwo needs to be written out for surface override, or similar. Origin is the call to generateSurfaceObjects() which expects to evaluate passNames[pass]. Since 'pass' is a local variable, it fails.
 - Fixed by making 'pass' a global variable. Not particularly elegant.

20130102
========

- Introduced new 'PassPort Renewed' naming to distinguish this effective fork/rewrite from the original project.
- Growl system interoperation on Mac now configurable.
 - Wrapped up growl code in OS X scene render functions with a preference setting to enable growl (or not).
- Experimental fix to oversight in scene generation code. Line 1468. Might need a better fix.
- Retired LW preference handling code for older LW versions from getImageFormats() as we've locked out versions prior to 11.0
- Removed resizePanel() empty function.
- Error message change in getCommand function.
- Minor optimisation in getCommand function.

20130101
========

- Make use of runningUnder() to avoid lwsn crashes.
- Tweaked hard-coded, obsolete, reference to ScreamerNet.
- First run under OS X!
- Bumped minimum requirement to LW 11.0.
- Further tweaks to refine operation.
- Moved Motion Mixer handling to a separate function to reduce complexity.
- Moved buffer handling code to a separate function to reduce complexity.
- Modified writeOverrideString function to handle 'special' case of FrameSize and GlobalFrameSize settings.
- Deployed improved scene file writing code. Probably broken build for now. Will debug over time :)
- NT helped with guidance to avoid the arithmetic error on OS X. It's that this_script[1] in the main file (and also in the interface subfuncs file).
 - Reworked this code per NT's guidance.
 - Have followed up the reply with a query about why the error location is always wrong.

20121229
========

- Removed HackyUpdates and related code.
- Scene Master Override extended to support GI adjustment :
 - Toggle radiosity
 - Change mode :
		mode		type value
		backdrop	0
		monte		1
		final		2
 - Toggle interpolation.
 - Toggle blur.
 - Transparency
 - Volumetric radiosity
 - Directional rays
 - Gradients
 - Behind Test
 - Use Bumps (uses RadiosityFlags, and uses binary which is written out as decimal. LScript doesn't appear to permit conversion).
 - Numeric values for GI. Angular tolerance is currently broken due to some odd conversion behavior in LW.
 - Caustics.
- Scene Master override interface overhauled.
- Scene Master override support added for :
 - Ray precision
 - Ray Cutoff
 - Shading samples
 - Light samples
 - Global light intensity
 - Global flare intensity
- Scene Master Override extended to add toggles for :
 - Lens Flares
 - Shadow Maps
 - Volumetric Lights
 - Two-sided area lights
 - Render instances
 - Scene Master Override extended to support overriding raytrace flags :
 - sum of (ctlstate * flag value) for each of:	
		raytrace	flag value
		shad		1
		refl		2
		refr		4
		tran		8
		occl		16
- Tuned scene generation code to work more flexibly and in a more robust manner.
 - Previous approach, from original code, was to use hard-coded lengths from the strings being sought and had multiple occurrences of the string.
 - Previous approach also didn't seem to handle variant settings (those that disappear when unset and reappear when set, in the scene file).
 - New approach appends these settings to the end of the scene file.

20121228c
=========

- Removed some binary character corruption from the scenegen file.
- Bumped recursion maximum value to 64, to match LW 11.x.

20121228b
=========

- Shifting override panel UIs out to a dedicated file, with edit/new modes merged.
 - Major optimization of the UI code and simplication.
 - Moved edit and new value assignments to controls nearer to the controls in the code.
- Fixed Win 64 platform handling.

20121228
========

- Thinking about how to more intelligently implement the UI update for bullets :
    overrideNames[x] = " " + icon[BULLET] + " " + overrideNames[x];
- Returning to implementation of new stuff : 
 - Fixes for the new additions to the light override. Fixed volumetric toggle. Lens flare toggle still not working as expected...

20121224
========

- Removed some obsolete info() calls
- Added limitation entry regarding current usage expectation that doesn't involve LScript/RT.
- Identified additional failure mode - if user output path is invalid / inaccessible.

20121220
=========

- Preprocessor full of flaky, so went for a different approach to track supported platforms.
- Dropped absolute paths for the @insert statements, gone for all-relative. Seems to no longer blow up.
- Removed various info() statements.

20121214b
=========

- First pass at system to failsafe operation on unsupported (e.g. CFM Mac) LW. Need to also add build check in this to block running when the hacky modes are stripped out.
 - Needs QA.
- HackySaving removed (was required for versions prior to 9.3 - very old now).
 - Build check added to entry points; script will error() out on builds prior to 1281.
 - Significant code reduction. Needs limited QA.

20121214
========

- Adjusted o_AddAll code to work with new system.
- Fixed numerous silly errors - current favourite : .asStr instead of .asStr()
- Fixed stupid item ID look-up bug in override event code. This was the cause of p0013, and it was a very silly error. *hangs head in shame*.

20121212
========

- Updated header images to credit Matt for his work.
- Found various gaps in platform support for Win64. Closed.
- Still fighting p0013....
 - Very odd. The arrays seem to be intact and valid. There's something odd going on in the look-up. A multiple selection, even with a gap between, always returns sequential numbers (1 2) rather than (3 5). Puzzling. Values coming into the parse function are correct.
- Replaced hard-coded platform IDs with official variable names.
- Deuce reported that the compiled version doesn't have the start-up issues of the uncompiled version (p0014), on both Windows and Mac. Odd. (NT : known issue with images loading into uncompiled LScripts - nothing to do except compile the script)

20121211b
=========

- Considering bumping host version requirement to allow hacky saving to be removed, for simplicity.
- Flagged HackyUpdates with FIXME and ensured it activates on Mac64 for review. Might not be needed any more.
- Need to resolve p0013 and then attack the pending items list before new work undertaken.

20121211
========

- Adjusted o_itemslb_event to work with the new array configurations.
- Adjusting o_parseListItems to work with the new filtered ID list. Also adjusted input variable name (changed passItemsString to overrideItemsString).
- Highlighting code now appears to be working! It needed a pair of req_update calls. Added comments to code.
 - Lurking bug p0013 : if you select the second light of two, the first is highlighted. Gah.
- Next step is o_AddAll re-implementation.
- Moved override item filtering code into o_Filter(overrides_list) for generic use.
- Removing comment markers from code disabled during UI dissection. Should resolve some lingering repaint issues. May need to add o_displayNamesFiltered clearance to some functions in the UDF file.

20121210
========

Continuing work, now to handle the overrides list assignment and retrival stuff. Check the override operation observations section below for how this worked in the original code. This should help to understand this change.

- Bug fix to correctly populate items list - silly bug due to indexed arrays in LScript starting from 1.
- Removed various info() calls.
- Removed obsolete code.
- Implemented o_displayIDs to build an override-item-list-aligned ID array.
	- Filter this into o_displayIDsFiltered in the same way that we handle o_displayGenus, o_displayNames.

20121207
========

Work continues on the UI systems :

- Migrated requpdate() calls to req_update().
- Various fixes and implementation tweaks to filter override items. Some remaining bugs to be ironed out.
- Disabling direct calls to set the override item list to nil or set_o_items. The associated array ought to deal with this.
- More code clean-up to simplify overrides list handling in case of multi-selection, etc.

20121206
========

Brace yourself. Here's the big set of UI changes related to filtering the override items listbox based on selected override type, and to making the code less aggravating to read. Many thanks to both Lernie and Matt for their help in showing me where I was going wrong in the original attempt to implement the listbox filtering based on a selection elsewhere in the UI. I wasn't far off, but overlooked the multi-selection aware nature of the listboxes and a couple of other issues.

- Changed the obscure c3 listbox references to 'gad_SceneItems_forPasses_Listview'
- Changed the obscure c3_5 listbox references to 'gad_SceneItems_forOverrides_Listview'
- Changed all other obscure UI references to explicit labels; more readable/understandable than 'c0_5'
- Removing lots of tempNumber usage that confuses intent of code.
- Added debug state button to UI. Intent is to enable developer to block rendering and to have scene files open for inspection during development of new support in PP. Only shown in dev mode.
 - Render functions now respect this setting.
 - Setting retained across sessions. Default is off.
- Switched dev and debug handling to integers to make handling easier. 0 is off, 1 is on.
- Split Passes and Overrides UDFs out of main file to two separate ones.
- Reworked the override item list generation code - much simpler.
- Fixed bug p0012 - hadn't yet hooked up the override lists in the reprocess UI code.
- Initial migration of override items listbox code to new filtered list. This will be bringing breakage aplenty.... There's some additional subtlety in tracking selected items, it seems.
- Scene Master special item gets an internal genus type of 0 to filter against the type6 override.

20121204
========

- Moved button functions out of Interface code file into UDF file. Makes more sense.

20121203
========

- Added info() calls to try and understand why genus checks are failing, allowing incompatible types to be assigned to overrides.
 - Found that code only uses genus to know how to reference the itemname in terms of an agent. There is no check for compatibility with the selected override.
- Rewrote interface code to check override type and genus, rejecting incompatible assignment attempts.
 - Works just fine.
 > Fix to be rolled into other functions in the system. FIXME added to o_addAll - this will need to be re-worked in the same kind of way.
- AddSel button tries to add selected Layout item, not the elements in the righthand listbox. Documented, but odd, possibly not expected, behaviour that caused p0010. Opened p0011 for more explicit tracking of issue and whether this needs to be re-worked.
- Added platform '11' corresponding to Mac64 platform to various platform checks in the code.
- Added dev flag in the render code to block rendering and instead permit inspection of the generated scene file and batch file combination.
- Re-jigged some changes related to override item assignment filtering, to make them more understandable.
- Minor typo fixes.

20121201
========

- Unpicked work related to false start to address issue p0009. Better fix needed.
- Added platform ID of 11 to correspond to Mac64.
- Listbox selections are misbehaving… p0010

20121130
========

- Fixed obscure startup bug p0003 in the code.
- Running QA tests on pass generation and functionality from yesterdays sweeping changes....
 - Bug p0004 fixed in argument order for new SceneGen code. Now works properly.
 - Bug p0005 fixed : had overlooked a legacy path construction chunk of code that missed a getsep() call originally and hadn't been migrated to the new generic construction func.
 - LWO saver code was broken in original script (p0006). Moved to the generatePath function. Potential for simplification exploited as well - duplicate code in save path eliminated with a single instance. Saver construct was also easily matched to generic form in function.
 - Validating object property overrides : visible to camera; visible to rays
 - Validated surface override
 - Validated alternative object override
 - Validated light exclusion override
 - Validating master scene override :
  - Bug p0007 identified - master scene override will fail if anything other than the (Scene Master) is added :
	- Initial fix is to empty the assignmentArray for this override - it should be nil to avoid issues. Had to also add some safety checks for nil for size(assignmentArray) later in code due to this.
- Bug p0008 identified and preliminary triage added - if the overrideType is (nil), size() will choke badly in the 'failsafe' conditional in sceneGen. Trying to avoid this and more cleanly handle the situation.
- Bug p0009 related to the above - it seems to be possible to add elements to overrides that are incompatible with that override (e.g. surfacing overrides to lights)
 - Fix will be to screen right hand column contents to avoid listing incompatible types for overrides. UDF code needs serious work to address this (also for add all, etc. buttons).
- 30 KB less code right now compared to original source.

20121129
========

- Trying to re-enable disabled lens flare and volumetric properties support for lights. Untested.
- Major optimisation of the SceneGen code :
	- Started by splitting code and looking for differences between frame and sequence mode. Based on differences, added a 'mode' switch ("frame" or "seq"). This then drives the output string formatting and naming. This allowed the majority of the simplification.
	- Added a new internal function called generatePath that takes inputs common to all of the SaverPath generation steps. This reduces duplication in the save code to function calls with similar parameters. The save function utilises mode to determine how to construct the final path.
	- Reduced code by 20 KB. Redundant saverPath code will be removed once experimental changes for generic path construction have been validated.
- Pushing UI layout variables into new passEditor_UIglobals.ls file, to be able to easily share layout settings between edit and create override dialogs, for example. All dialogs migrated and tested. Moved 7 KB of variable definitions out of the Interface_Subfuncs file. Some code increase due to the revised dialog in the editing section, but at least it is all now consistent. Will consider a further optimisation in a future revision.
- Minor coding style fixes (bug p0002).

20121128
========

- Removed unused build variable. Switched version to a date build (experimental)
- Added a dev toggle switch to handle @insert switching for source vs compiled.
- Adjusting about screen to remove registration readout and to add LW version and platform information.
- Removed dongle check code that was obsolete.
- Removed Mac CFM code chunk - CFM was never supported, based on the code comments.
- Optimised the @insert statements to make the code more readable and maintainable.
- Discovered that @insert doesn't work with icon resources - you have to include them in the main script.
- Moved variables out of code into a separate file to reduce clutter and needless duplication.
- Removed dead code that was disabled by previous contributors for better alternatives.
- Fixed indenting in original code.
- Moved UDF code to a dedicated file.
- Worked around About box corruption (bug p0001) by disabling drawline calls in the req_redraw function. Added an explicit line drawing call in the about box function instead.

+++++++++++++++
+ In Progress +
+++++++++++++++

- Pending

********
* Bugs *
********

p0001 : About screen corruption (Fixed)
p0002 : Coding style issues (Review ongoing, largely fixed)
p0003 : Start-up bug. (Fixed)
p0004 : SceneGen routine blows up. (Fixed)
p0005 : path incorrect. (Fixed)
p0006 : LWO saver blowing up. (Fixed)
p0007 : Master scene override failure if anything other than, or in addition to, (Scene Master) is assigned to it. (Fixed)
p0008 : Failsafe code for overrideType needs to be made more robust. (Fixed)
p0009 : Possible to add (Scene Master) item to overrides that are not related. Need to engineer a fix (skip first item in list, or create a genus for this item). (Fixed)
p0010 : listbox selections are misfiring. (notabug? related to p0011 - user expectation was different to UI functionality)
p0011 : AddSel seems to replace existing assignments of overrides, rather than adding to the existing selection. Odd and probably the cause for report p0010. (deferred)
p0012 : Rebuilding lists causes script to explode. (Fixed)
p0013 : Selecting second item in list causes highlight to be drawn (on repaint) for 1st item. (Fixed)
p0014 : Uncompiled version crashes out on Mac and fails to start-up roughly 70% of the time on WinXP. (closed, LScript bug)
p0015 : Overrides with assigned items don't get bullet point until the lists are updated, or some major redraw occurs (also in original code)
p0017 : Scene override fails during scene generation. Wrong line cited on OS X, but Win32 reports correct number. Invalid index to passName. Line 1744 of sceneGen code. (Fixed)

###############
# Limitations #
###############

1. Plugin expects to be used as 'Passport_MC', not through the LScript/RT intermediate layer.

:::::::::::::::::::
: Issues to check :
:::::::::::::::::::

- Lens flare toggle isn't working.
- SceneGen code could be optimised to walk the array and use loops to greatly simplify the code. (partially done with 20130101)
- Add Camera override, for camera settings.
- Autoscan plugin operation.
- Need to check if growl interaction works with current growl versions.

-------------
- Reference -
-------------

A. settingsarray
----------------

This tracks what is to be done. The 'type' of entity in the array is defined arbitrarily as :

	case 1: "   (.srf file)"
	case 2: "   (object properties)"
	case 3: "   (.mot file)"
	case 4: "   (.lwo file)"
	case 5: "   (light properties)"
	case 6: "   (scene properties)"
	case 7: "   (light exclusion)"

B. How were override items handled originally?
----------------------------------------------

In the original code, prior to the filtered item list for overrides, the code worked in the manner described below :

1) o_itemslb_event:

	In items listbox, in an override is selected :
		- the selected items are added to the passOverrideItems array for the current pass and selected override.
		- o_items is the index of each selected item in the listbox. This is a fixed list and item 1 is always the (Scene Master) entity.
		- All other items are tracked by their display ID, so the index in o_items has to be decremented by 1 (due to the Scene Master) to correctly locate the displayID associated with the selected item.
		
2) o_parseListItems:

	This returns an index in the listbox for each assigned item in the selected override.
	This is done by using the stored displayID in part 1 to return an index.
	For the 2nd and 3rd items selected, the returned index would be '2 3'
	
3) overrideslb_event:

	This uses o_parseListItems to retrieve the indices of the selected items from the array.
	